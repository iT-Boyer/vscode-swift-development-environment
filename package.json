{
  "name": "vscode-swift-development-environment",
  "displayName": "Maintained Swift Development Environment",
  "description": "New home of Swift Development Environment for VS Code",
  "author": {
    "name": "Valentin Knabel",
    "email": "dev@vknabel.com",
    "url": "https://github.com/vknabel"
  },
  "license": "Apache-2.0",
  "version": "2.10.1",
  "publisher": "vknabel",
  "icon": "icons/icon.png",
  "galleryBanner": {
    "color": "#FC823F",
    "theme": "light"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vknabel/vscode-swift-development-environment"
  },
  "engines": {
    "vscode": "^1.30.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "keywords": [
    "swift",
    "sde",
    "linux",
    "lldb",
    "development"
  ],
  "preview": false,
  "activationEvents": [
    "onLanguage:swift",
    "workspaceContains:**/*swift",
    "onCommand:sde.commands.build",
    "onCommand:sde.commands.run",
    "onCommand:sde.commands.clean",
    "onCommand:sde.commands.selectRun"
  ],
  "main": "./out/clientMain",
  "contributes": {
    "commands": [
      {
        "command": "sde.commands.build",
        "title": "Build Package",
        "category": "SDE"
      },
      {
        "command": "sde.commands.restartLanguageServer",
        "title": "Restart Language Server",
        "category": "SDE"
      },
      {
        "command": "sde.commands.run",
        "title": "Run Default Target",
        "category": "SDE",
        "enablement": "sde:running == false"
      },
      {
        "command": "sde.commands.selectRun",
        "title": "Run Targetâ€¦",
        "category": "SDE",
        "enablement": "sde:running == false"
      },
      {
        "command": "sde.commands.restartRun",
        "title": "Restart Target",
        "category": "SDE",
        "enablement": "sde:running == true"
      },
      {
        "command": "sde.commands.stop",
        "title": "Stop Running Target",
        "category": "SDE",
        "enablement": "sde:running == true"
      },
      {
        "command": "sde.commands.clean",
        "title": "Clean Package",
        "category": "SDE"
      }
    ],
    "keybindings": [
      {
        "command": "sde.commands.build",
        "key": "alt+b"
      },
      {
        "command": "sde.commands.run",
        "key": "alt+r"
      },
      {
        "command": "sde.commands.selectRun",
        "key": "alt+shift+r"
      },
      {
        "command": "sde.commands.stop",
        "key": "alt+s"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Swift Development Environment",
      "properties": {
        "sourcekit-lsp.serverPath": {
          "type": "string",
          "description": "The path of the sourcekit-lsp executable\nIn SDE: defaults to the toolchain's sourcekit-lsp."
        },
        "sourcekit-lsp.toolchainPath": {
          "type": "string",
          "description": "The path of the swift toolchain.\nIn SDE: defaults to Xcode's default toolchain."
        },
        "swift.languageServerPath": {
          "type": "string",
          "default": "/usr/local/bin/langserver-swift",
          "description": "The fully qualified path to the Swift Language Server executable."
        },
        "swift.path.sourcekite": {
          "type": "string",
          "description": "The fully path to the sourcekite(SDE's LS backend)."
        },
        "swift.path.sourcekiteDockerMode": {
          "type": "boolean",
          "default": false,
          "description": "(Experimental)Enable to run dedicated docker shell command. It is the responsibility of user to guarantee that the docker cmd 'docker run --rm -i jinmingjian/docker-sourcekite' works in your system."
        },
        "swift.path.swift_driver_bin": {
          "type": "string",
          "default": "/usr/bin/swift",
          "description": "The fully path to the swift driver binary."
        },
        "swift.path.shell": {
          "type": "string",
          "default": "/bin/sh",
          "description": "The fully path to the shell binary."
        },
        "sde.sourcekit.compilerOptions": {
          "type": "array",
          "description": "Optional compiler options like the target or search paths. Will only be used as default. `(debug|release).yaml` builds will override these settings.",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "swift.targets": {
          "type": "array",
          "description": "If SDE cannot reliably detect all targets, you can manually configure them.",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "required": true,
                "description": "The module name of the target. Will be passed as -module-name."
              },
              "path": {
                "type": "string",
                "required": true,
                "description": "The reference path."
              },
              "sources": {
                "required": false,
                "type": "array",
                "description": "An array of globs to determine all sources within the current target.",
                "default": [
                  "**/*.swift"
                ],
                "items": {
                  "type": "string"
                }
              },
              "compilerArguments": {
                "type": "array",
                "required": false,
                "description": "Additional compiler arguments to be passed.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "sde.enable": {
          "type": "boolean",
          "default": true,
          "description": "Enable SDE functionality"
        },
        "sde.languageServerMode": {
          "type": "string",
          "default": "sourcekite",
          "enum": [
            "sourcekite",
            "langserver",
            "sourcekit-lsp"
          ],
          "description": "Decides which language server should be used. `sourcekite` is the default LSP for SDE, `sourcekit-lsp` is Apple's official one and `langserver` is RLovelett's Langserver."
        },
        "sde.enableTracing.client": {
          "type": "boolean",
          "default": false,
          "description": "Enable tracing output for SDE client"
        },
        "sde.enableTracing.LSPServer": {
          "type": "boolean",
          "default": false,
          "description": "Enable tracing output for SDE LS server"
        },
        "sde.buildOnSave": {
          "type": "boolean",
          "default": true,
          "description": "Indicates wether SDE shall build the project on save."
        },
        "sde.swiftBuildingParams": {
          "type": "array",
          "description": "The params that shall be passed to the swift command.",
          "default": [
            "build"
          ],
          "items": {
            "type": "string"
          }
        },
        "swift.diagnosis.max_num_problems": {
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server. NOET: Not used now."
        }
      }
    },
    "languages": [
      {
        "id": "swift",
        "extensions": [
          ".swift"
        ],
        "aliases": [
          "Swift"
        ],
        "firstLine": "^#!/.*\\bswift[0-9.-]*\\b"
      }
    ],
    "breakpoints": [
      {
        "language": "swift"
      }
    ]
  },
  "prettier": {
    "trailingComma": "es5",
    "tabWidth": 2,
    "printWidth": 100
  },
  "scripts": {
    "vscode:prepublish": "npm run build",
    "build": "npm run compile",
    "compile": "npx tsc",
    "format": "npx prettier CHANGELOG.md README.md src/*.ts src/server/**/*.ts tsconfig.json --write",
    "test": "npx jest"
  },
  "devDependencies": {
    "@types/bunyan": "^1.8.4",
    "@types/glob": "^5.0.35",
    "@types/jest": "^24.0.18",
    "@types/js-yaml": "^3.11.1",
    "@types/node": "^12.19.7",
    "@types/vscode": "1.30.0",
    "@types/xml-js": "^1.0.0",
    "jest": "^24.9.0",
    "prettier": "^1.18.2",
    "ts-jest": "^24.0.2",
    "tsc": "^1.20150623.0",
    "typescript": "^4.1.2"
  },
  "dependencies": {
    "bunyan": "^1.8.5",
    "fs-promise": "^1.0.0",
    "glob": "^7.1.4",
    "js-yaml": "^3.13.1",
    "vscode-languageclient": "^5.2.1",
    "vscode-languageserver": "^5.2.1",
    "xml-js": "^1.6.11"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testMatch": [
      "**/*.spec.ts"
    ],
    "moduleFileExtensions": [
      "ts",
      "js"
    ],
    "collectCoverage": true
  }
}
